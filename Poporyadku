#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
double t=1.7976931348623158e+308;

struct matr//структура записываемых матриц,
    //максимальное количество элементов в одной матрице-40000
{
    int k;
    int l;
    double a[40000];
};

void umn(double *a,double *b,int k, int l, int y, double *C){//умножение двух матриц

    for(int i = 0; i < k; i++)
        for(int j = 0; j < y; j++) {
            C[i*y+j] = 0;
            for(int p = 0; p < l; p++){
                C[i*y+j] =C[i*y+j]+( *(a+i*l+p) * *(b+p*y+j));
            }
        }

}
void final (struct matr*go,int n){//умножение в прямом порядке
    int i=0;
    while (i!=n-1) {
        double *C=(double*)malloc((go[0].k*go[1].l)*sizeof(double ));
        umn(go[0].a, go[1].a, go[0].k, go[0].l, go[1].l, C);
        go[0].l=go[1].l;


        for(int o = 0; o < go[0].k*go[0].l; o++) go[0].a[o]=C[o];


        if(n-i>2){
            for(int j = 1; j < n-i-1; j++){
                go[j].k=go[j+1].k; go[j].l=go[j+1].l;
                for(int o = 0; o < go[j].k*go[j].l; o++) go[j].a[o]=go[j+1].a[o];
            }

        }

        i++;
    }
}


int main() {
    int n, i, j, l;
    clock_t h;


    printf("Введите количество матриц: \n");
    scanf("%d", &n);

    struct matr *go= (struct matr *) malloc(n * sizeof(struct matr));//выделяем память



    for (i = 0; i < n; i++) {//вводим размеры матриц и сами матрицы

        printf("Введите размер m*n матрицы №:%d \n", i);
        scanf("%d %d",&go[i].k, &go[i].l);

        if(i!=0) if(go[i].k!=go[i-1].l) {printf("\nС таким размером матрицы нельзя умножить! \n"); exit(1);}

        printf("Введите матрицу №:%d: \n", i+1);
        for (l = 0; l < (go[i].k); l++)
            for (j = 0; j < (go[i].l); j++){
                scanf("%lf", &go[i].a[l*go[i].l+j]);

            }
    }


    h=clock();//замеряем время
    final(go,n);
    h=clock()-h;

    for(int o = 0; o < go[0].k; o++)
    {for( j = 0; j < go[0].l; j++) {
            printf("%.2lf    ",go[0].a[o*go[0].l+j]);
        }printf("\n");}

    printf("\nвремя выполнения ==> %lf секунд\n",((double)h)/CLOCKS_PER_SEC);


    free(go);
    return 0;
}
